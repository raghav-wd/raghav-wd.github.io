{"version":3,"sources":["components/MagicRoom.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["MagicRoom","Model","gltf","useGLTF","useAnimations","animations","ref","names","actions","useEffect","play","object","scene","dispose","scale","rotation","Math","PI","position","dpr","camera","fov","style","height","width","fallback","OrbitControls","enablePan","enableZoom","enableRotate","Sky","azimuth","inclination","distance","attach","args","Stars","radius","depth","count","factor","saturation","fade","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAgDeA,EA5CG,WAEhB,IAAMC,EAAQ,WACZ,IAAMC,EAAOC,YAAQ,4CAA4C,GACjE,EAAgCC,YAAcF,EAAKG,YAA3CC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,QAIpB,OAHAC,qBAAU,WACVD,EAAQD,EAAM,IAAIG,UAGhB,2BACEC,OAAQT,EAAKU,MACbN,IAAKA,EACLO,QAAS,KACTC,MAAO,GACPC,SAAU,CAAC,EAAa,KAAVC,KAAKC,GAAW,GAC9BC,SAAU,CAAC,GAAI,GAAI,MAKzB,OACE,cAAC,IAAD,CACEC,IAAK,CAAC,EAAG,GACTC,OAAQ,CAAEF,SAAU,CAAC,EAAG,EAAG,KAAMG,IAAK,IACtCC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAHnC,SAKE,eAAC,WAAD,CAAUC,SAAU,KAApB,UACE,cAACC,EAAA,EAAD,CAAeC,WAAS,EAACC,YAAU,EAACC,cAAY,IAChD,cAACC,EAAA,EAAD,CAAKC,QAAS,EAAGC,YAAa,GAAKC,SAAU,MAC7C,qBAAKC,OAAO,MAAMC,KAAM,CAAC,UAAW,EAAG,OACvC,cAAClC,EAAD,IACE,cAACmC,EAAA,EAAD,CACAC,OAAQ,EACRC,MAAO,GACPC,MAAO,IACPC,OAAQ,EACRC,WAAY,EACZC,MAAI,UC9BCC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,O,QCMSC,EAVS,SAACC,GACnBA,GAAeA,aAAuBC,WACxCC,YAAOF,GACPG,YAAOH,GACPI,YAAOJ,GACPK,YAAOL,GACPM,YAAQN,KCFZO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3489a490.chunk.js","sourcesContent":["import React, { Suspense, useEffect } from 'react'\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { useGLTF, OrbitControls, Stars, useAnimations, Sky } from '@react-three/drei'\r\n\r\nconst MagicRoom = () => {\r\n  // Importing model\r\n  const Model = () => {\r\n    const gltf = useGLTF('./libs/3_seconds_of_vacations/scene.gltf', true)\r\n    const { ref, names, actions } = useAnimations(gltf.animations)\r\n    useEffect(() => {\r\n    actions[names[0]].play()\r\n  })\r\n    return (\r\n      <primitive\r\n        object={gltf.scene}\r\n        ref={ref}\r\n        dispose={null}\r\n        scale={10}\r\n        rotation={[0, Math.PI * 1.18, 0]}\r\n        position={[0, -20, 0]}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Canvas\r\n      dpr={[1, 2]}\r\n      camera={{ position: [0, 0, 100], fov: 45 }}\r\n      style={{ height: '100vh', width: '100%' }}\r\n    >\r\n      <Suspense fallback={null}>\r\n        <OrbitControls enablePan enableZoom enableRotate />\r\n        <Sky azimuth={1} inclination={0.6} distance={1000} />\r\n        <fog attach=\"fog\" args={['#ffffff', 0, 300 ]} />\r\n        <Model />\r\n          <Stars\r\n          radius={8} // Radius of the inner sphere (default=100)\r\n          depth={50} // Depth of area where stars should fit (default=50)\r\n          count={10000} // Amount of stars (default=5000)\r\n          factor={2} // Size factor (default=4)\r\n          saturation={0} // Saturation 0-1 (default=0)\r\n          fade // Faded dots (default=false)\r\n        />\r\n      </Suspense>\r\n    </Canvas>\r\n  )\r\n}\r\n\r\nexport default MagicRoom\r\n","import './App.css'\r\nimport MagicRoom from './components/MagicRoom'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MagicRoom />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { getLCP, getFID, getCLS, getFCP, getTTFB } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry)\n    getFID(onPerfEntry)\n    getFCP(onPerfEntry)\n    getLCP(onPerfEntry)\n    getTTFB(onPerfEntry)\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}