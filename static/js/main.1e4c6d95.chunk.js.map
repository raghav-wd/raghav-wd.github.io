{"version":3,"sources":["components/Models/Person.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Plane","props","usePlane","rotation","Math","PI","mesh","ref","args","color","Person","panel","personGuiPanel","blendDuration","direction","THREE","frontVector","sideVector","useEffect","GUI","addFolder","keys","KeyW","KeyS","KeyA","KeyD","Space","moveFieldByKey","key","Tree","gltf","useGLTF","scale","object","scene","dispose","JuiceCup","position","Piano","SunsetGirl","Model","useAnimations","animations","actions","mixer","names","clips","useState","forward","backward","left","right","jump","movement","setMovement","handleKeyDown","e","m","code","handleKeyUp","document","addEventListener","removeEventListener","usePlayerControls","useThree","camera","velocity","mouse","useRef","personShadowRef","useSphere","mass","type","api","set","Number","subVectors","normalize","multiplyScalar","reset","fadeOut","fadeIn","play","lookAt","subscribe","v","current","useFrame","getWorldPosition","z","y","x","lerp","rotateModelWithMovement","add","min","max","step","name","Shadow","dpr","fov","style","height","width","Stats","showPanel","className","Sky","distance","sunPosition","inclination","azimuth","intensity","fallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e4c6d95.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { Suspense, useState, useEffect, useRef } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport {\n  Physics,\n  useSphere,\n  usePlane,\n  useBox,\n  Debug,\n} from '@react-three/cannon'\nimport {\n  useGLTF,\n  useAnimations,\n  Sky,\n  PointerLockControls,\n  Shadow,\n  Stats,\n} from '@react-three/drei'\nimport { GUI } from 'dat.gui'\n\nconst Person = () => {\n  const blendDuration = 0.15\n  let panel, personGuiPanel, cameraGuiPanel\n\n  const SPEED = 3\n  const direction = new THREE.Vector3()\n  const frontVector = new THREE.Vector3()\n  const sideVector = new THREE.Vector3()\n  const rotation = new THREE.Vector3()\n  const speed = new THREE.Vector3()\n\n  useEffect(() => {\n    panel = new GUI()\n    personGuiPanel = panel.addFolder('Person')\n    cameraGuiPanel = panel.addFolder('Camera')\n  }, [])\n\n  const keys = {\n    KeyW: 'forward',\n    KeyS: 'backward',\n    KeyA: 'left',\n    KeyD: 'right',\n    Space: 'jump',\n  }\n  const moveFieldByKey = (key) => keys[key]\n\n  const usePlayerControls = () => {\n    const [movement, setMovement] = useState({\n      forward: false,\n      backward: false,\n      left: false,\n      right: false,\n      jump: false,\n    })\n    useEffect(() => {\n      const handleKeyDown = (e) => {\n        setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: true }))\n      }\n      const handleKeyUp = (e) => {\n        setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: false }))\n      }\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keyup', handleKeyUp)\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown)\n        document.removeEventListener('keyup', handleKeyUp)\n      }\n    }, [])\n    return movement\n  }\n  const Tree = (props) => {\n    const gltf = useGLTF('./libs/stylized_tree/scene.gltf')\n\n    return (\n      <primitive\n        {...props}\n        scale={[0.01, 0.01, 0.01]}\n        object={gltf.scene}\n        dispose={null}\n      />\n    )\n  }\n\n  const JuiceCup = (props) => {\n    const gltf = useGLTF('./libs/low_poly_stylized_juice_cup/scene.gltf')\n\n    return (\n      <primitive\n        {...props}\n        position={[4, 1, 4]}\n        object={gltf.scene}\n        dispose={null}\n      />\n    )\n  }\n\n  const Piano = (props) => {\n    const gltf = useGLTF('./libs/piano/scene.gltf')\n\n    return (\n      <primitive\n        {...props}\n        rotation={[0, -Math.PI / 2, 0]}\n        position={[4, 0.2, 7]}\n        object={gltf.scene}\n        dispose={null}\n      />\n    )\n  }\n  const SunsetGirl = (props) => {\n    const gltf = useGLTF(\n      './libs/sunset_walking_low_poly_girl_rigged/scene.gltf'\n    )\n\n    return (\n      <primitive\n        {...props}\n        rotation={[0, Math.PI / 2, 0]}\n        position={[0, 0.001, 20]}\n        scale={0.8}\n        object={gltf.scene}\n        dispose={null}\n      />\n    )\n  }\n\n  // Importing model\n  const Model = () => {\n    const gltf = useGLTF('./libs/Pikachu.glb', true)\n    const { ref, mixer, names, actions, clips } = useAnimations(gltf.animations)\n    const { forward, backward, left, right, jump } = usePlayerControls()\n    const { camera, mouse } = useThree()\n    const velocity = useRef([0, 0, 0])\n\n    const personShadowRef = useRef(null)\n\n    const [mesh, api] = useSphere(() => ({\n      mass: 10,\n      position: [0, 1, 0],\n      type: 'Dynamic',\n    }))\n\n    useEffect(() => {\n      frontVector.set(0, 0, Number(forward) - Number(backward))\n      sideVector.set(Number(right) - Number(left), 0, 0)\n      direction\n        .subVectors(frontVector, sideVector)\n        .normalize()\n        .multiplyScalar(SPEED)\n\n      if (forward || right || left || backward) {\n        actions['Happy Idle'].reset().fadeOut(blendDuration)\n        actions['Walking'].reset().fadeIn(blendDuration).play()\n      }\n      return () => {\n        if (forward || right || left || backward) {\n          actions['Happy Idle'].reset().fadeIn(blendDuration).play()\n          actions['Walking'].reset().fadeOut(blendDuration)\n        }\n      }\n    }, [forward, backward, right, left, jump])\n\n    useEffect(() => {\n      actions['Happy Idle'].play()\n      camera.position.set(0, 2, -6)\n      camera.lookAt(0, 1, 0)\n      api.velocity.subscribe((v) => (velocity.current = v))\n    }, [])\n\n    useFrame(() => {\n      mesh.current.getWorldPosition(camera.position)\n      camera.position.z -= 6\n      camera.position.y = 2\n      mesh.current.getWorldPosition(ref.current.position)\n      personShadowRef.current.position.x = ref.current.position.x\n      personShadowRef.current.position.z = ref.current.position.z\n      api.velocity.set(direction.x, velocity.current[1], direction.z)\n      ref.current.rotation.y = THREE.MathUtils.lerp(\n        ref.current.rotation.y,\n        rotateModelWithMovement(),\n        0.2\n      )\n      ref.current.position.y -= 1\n    })\n\n    const rotateModelWithMovement = () => {\n      let rotation = 0\n      if (!((forward || backward) && (left || right))) {\n        if (forward) rotation = 0\n        else if (backward) rotation = Math.PI\n        else if (left) rotation = Math.PI / 2\n        else if (right) rotation = -Math.PI / 2\n      } else {\n        if (forward && left) rotation = Math.PI / 4\n        else if (forward && right) rotation = -Math.PI / 4\n        else if (backward && left) rotation = (3 * Math.PI) / 4\n        else if (backward && right) rotation = -(3 * Math.PI) / 4\n      }\n      return rotation\n    }\n\n    useEffect(() => {\n      if (personGuiPanel && personGuiPanel) {\n        personGuiPanel\n          .add(ref.current.position, 'x')\n          .min(0)\n          .max(5)\n          .step(0.1)\n          .name('x')\n        personGuiPanel\n          .add(ref.current.position, 'y')\n          .min(0)\n          .max(5)\n          .step(0.1)\n          .name('y')\n        personGuiPanel\n          .add(ref.current.position, 'z')\n          .min(0)\n          .max(5)\n          .step(0.05)\n          .name('z')\n        personGuiPanel.add(ref.current, 'visible')\n      }\n    }, [])\n\n    return (\n      <mesh>\n        <mesh ref={mesh}></mesh>\n        <primitive scale={0.6} ref={ref} object={gltf.scene} dispose={null} />\n        <Shadow\n          ref={personShadowRef}\n          scale={[0.5, 0.5, 0.5]}\n          position-y={0.01}\n          rotation-x={-Math.PI / 2}\n        />\n      </mesh>\n    )\n  }\n\n  return (\n    <Canvas\n      dpr={[1, 2]}\n      camera={{ fov: 45 }}\n      style={{ height: '100vh', width: '100%' }}\n    >\n      <Stats\n        showPanel={0} // Start-up panel (default=0)\n        className=\"stats\" // Optional className to add to the stats container dom element\n      />\n      <Sky\n        distance={450000} // Camera distance (default=450000)\n        sunPosition={[0, 1, 0]} // Sun position normal (defaults to inclination and azimuth if not set)\n        inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n        azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        // {...props} // All three-stdlib/objects/Sky props are valid\n      />\n      {/* <fog attach=\"fog\" args={['#cc7b32', 0, 34]} /> */}\n      {/* <PointerLockControls maxPolarAngle={Math.PI/2} minPolarAngle={Math.PI/5} args/> */}\n      {/* <OrbitControls ref={orbitcontrols} makeDefault target={[0, 1, 0]} makeDefault/> */}\n      <ambientLight />\n      <axesHelper args={[100]} />\n      <pointLight position={[-5, 10, -2]} intensity={2} />\n      {/* <Rig/> */}\n      <Suspense fallback={null}>\n        <SunsetGirl />\n      </Suspense>\n      <Suspense fallback={null}>\n        <Tree position={[2, 0, 0]} />\n      </Suspense>\n      <Suspense fallback={null}>\n        <JuiceCup />\n      </Suspense>\n      <Suspense fallback={null}>\n        <Piano />\n      </Suspense>\n      <Physics>\n        {/* <Debug> */}\n        <Plane />\n        <Suspense fallback={null}>\n          <Model />\n        </Suspense>\n        {/* </Debug> */}\n      </Physics>\n    </Canvas>\n  )\n}\n\nfunction Cube(props) {\n  const [ref] = useBox(() => ({ mass: 1, position: [0, 5, 0], ...props }))\n  return (\n    <mesh ref={ref}>\n      <boxGeometry />\n    </mesh>\n  )\n}\n\nfunction Plane(props) {\n  // This reference will give us direct access to the mesh\n  const [mesh] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }))\n  // console.log(mesh.current.x)\n  return (\n    <mesh ref={mesh} {...props} rotation={[-Math.PI / 2, 0, 0]}>\n      <planeBufferGeometry args={[100, 100]} />\n      <meshStandardMaterial color=\"orange\" />\n    </mesh>\n  )\n}\n\nexport default Person\n","import './App.css'\nimport Person from './components/Models/Person'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Person />\n    </div>\n  )\n}\n\nexport default App\n","import { getLCP, getFID, getCLS, getFCP, getTTFB } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry)\n    getFID(onPerfEntry)\n    getFCP(onPerfEntry)\n    getLCP(onPerfEntry)\n    getTTFB(onPerfEntry)\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}