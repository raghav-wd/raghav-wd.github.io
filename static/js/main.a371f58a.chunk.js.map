{"version":3,"sources":["components/Models/Person.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Plane","props","usePlane","rotation","Math","PI","mesh","ref","args","color","Person","panel","personGuiPanel","blendDuration","useState","direction","THREE","frontVector","sideVector","useEffect","GUI","addFolder","keys","KeyW","KeyS","KeyA","KeyD","Space","moveFieldByKey","key","Tree","gltf","useGLTF","scale","object","scene","dispose","JuiceCup","position","Piano","Model","useFBX","useAnimations","animations","names","mixer","actions","clips","forward","backward","left","right","jump","movement","setMovement","handleKeyDown","e","m","code","handleKeyUp","document","addEventListener","removeEventListener","usePlayerControls","camera","useRef","useThree","velocity","useSphere","mass","type","api","set","Number","subVectors","normalize","multiplyScalar","reset","fadeOut","fadeIn","play","console","log","lookAt","subscribe","v","current","useFrame","getWorldPosition","z","x","y","add","min","max","step","name","dpr","fov","style","height","width","Stats","showPanel","className","Sky","distance","sunPosition","inclination","azimuth","fallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a371f58a.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { Suspense, useState, useEffect, useRef } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport {\n  Physics,\n  useSphere,\n  usePlane,\n  useBox,\n  Debug,\n  useCylinder,\n} from '@react-three/cannon'\nimport {\n  useGLTF,\n  Stars,\n  OrbitControls,\n  useAnimations,\n  PerspectiveCamera,\n  Sky,\n  PointerLockControls,\n  Stats,\n  useFBX,\n} from '@react-three/drei'\nimport { GUI } from 'dat.gui'\n\nconst Person = () => {\n  const blendDuration = 0.15\n  let panel, personGuiPanel, cameraGuiPanel\n  const [currentAction, setCurrentAction] = useState('walk')\n\n  const SPEED = 2\n  const direction = new THREE.Vector3()\n  const frontVector = new THREE.Vector3()\n  const sideVector = new THREE.Vector3()\n  const rotation = new THREE.Vector3()\n  const speed = new THREE.Vector3()\n\n  useEffect(() => {\n    panel = new GUI()\n    personGuiPanel = panel.addFolder('Person')\n    cameraGuiPanel = panel.addFolder('Camera')\n  }, [])\n\n  const keys = {\n    KeyW: 'forward',\n    KeyS: 'backward',\n    KeyA: 'left',\n    KeyD: 'right',\n    Space: 'jump',\n  }\n  const moveFieldByKey = (key) => keys[key]\n\n  const usePlayerControls = () => {\n    const [movement, setMovement] = useState({\n      forward: false,\n      backward: false,\n      left: false,\n      right: false,\n      jump: false,\n    })\n    useEffect(() => {\n      const handleKeyDown = (e) => {\n        setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: true }))\n      }\n      const handleKeyUp = (e) => {\n        setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: false }))\n      }\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keyup', handleKeyUp)\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown)\n        document.removeEventListener('keyup', handleKeyUp)\n      }\n    }, [])\n    return movement\n  }\n  const Tree = (props) => {\n    const gltf = useGLTF('./libs/stylized_tree/scene.gltf')\n\n    return (\n        <primitive {...props} scale={[0.01, 0.01, 0.01]} object={gltf.scene} dispose={null} />\n    )\n  }\n\n  const JuiceCup = (props) => {\n    const gltf = useGLTF('./libs/low_poly_stylized_juice_cup/scene.gltf')\n\n    return (\n        <primitive {...props} position={[4, 1, 4]} object={gltf.scene} dispose={null} />\n    )\n  }\n\n  const Piano = (props) => {\n    const gltf = useGLTF('./libs/piano/scene.gltf')\n\n    return (\n        <primitive {...props} rotation={[0, -Math.PI / 2, 0]} position={[4, 0.2, 7]} object={gltf.scene} dispose={null} />\n    )\n  }\n\n  // Importing model\n  const Model = () => {\n    const gltf = useFBX('./libs/walking.fbx')\n    const { ref, mixer, names, actions, clips } = useAnimations(gltf.animations)\n    const { forward, backward, left, right, jump } = usePlayerControls()\n    const personCameraRef = useRef(null)\n    const { camera } = useThree()\n    const velocity = useRef([0, 0, 0])\n\n    const [mesh, api] = useSphere(() => ({\n      mass: 10,\n      position: [0, 1, 0],\n      type: 'Dynamic',\n    }))\n\n    useEffect(() => {\n      frontVector.set(0, 0, Number(forward) - Number(backward))\n      sideVector.set(Number(right) - Number(left), 0, 0)\n      direction\n        .subVectors(frontVector, sideVector)\n        .normalize()\n        .multiplyScalar(SPEED)\n\n      // if (forward || right || left) {\n      //   actions.idle.reset().fadeOut(blendDuration)\n      //   actions.walk.reset().fadeIn(blendDuration).play()\n      // }\n      // return () => {\n      //   if (forward || right || left) {\n      //     actions.idle.reset().fadeIn(blendDuration).play()\n      //     actions.walk.reset().fadeOut(blendDuration)\n      //   }\n      // }\n\n      if (forward || right || left) {\n        actions['Take 001'].reset().fadeOut(blendDuration)\n        actions['mixamo.com'].reset().fadeIn(blendDuration).play()\n      }\n      return () => {\n        if (forward || right || left) {\n          actions['Take 001'].reset().fadeIn(blendDuration).play()\n          actions['mixamo.com'].reset().fadeOut(blendDuration)\n        }\n      }\n    }, [forward, backward, right, left])\n\n    useEffect(() => {\n      // actions.idle.play()\n      actions['Take 001'].play()\n      console.log(names)\n      camera.position.set(0, 0, -4)\n      camera.lookAt(0, 0, 0)\n      api.velocity.subscribe((v) => (velocity.current = v))\n    }, [])\n\n    useFrame(() => {\n      mesh.current.getWorldPosition(camera.position)\n      mesh.current.getWorldPosition(ref.current.position)\n      camera.position.z -= 4\n      api.velocity.set(direction.x, velocity.current[1], direction.z)\n      ref.current.position.y -= 1\n    })\n\n    useEffect(() => {\n      if (personGuiPanel && personGuiPanel) {\n        personGuiPanel\n          .add(ref.current.position, 'x')\n          .min(0)\n          .max(5)\n          .step(0.1)\n          .name('x')\n        personGuiPanel\n          .add(ref.current.position, 'y')\n          .min(0)\n          .max(5)\n          .step(0.1)\n          .name('y')\n        personGuiPanel\n          .add(ref.current.position, 'z')\n          .min(0)\n          .max(5)\n          .step(0.05)\n          .name('z')\n        personGuiPanel.add(ref.current, 'visible')\n      }\n    }, [])\n\n    return (\n      <mesh>\n        <mesh ref={mesh}></mesh>\n        <primitive scale={0.015} ref={ref} object={gltf} dispose={null} />\n      </mesh>\n    )\n  }\n\n  return (\n    <Canvas\n      dpr={[1, 2]}\n      camera={{ fov: 45 }}\n      style={{ height: '100vh', width: '100%' }}\n    >\n      <Stats\n        showPanel={0} // Start-up panel (default=0)\n        className=\"stats\" // Optional className to add to the stats container dom element\n      />\n      <Sky\n        distance={450000} // Camera distance (default=450000)\n        sunPosition={[0, 1, 0]} // Sun position normal (defaults to inclination and azimuth if not set)\n        inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n        azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        // {...props} // All three-stdlib/objects/Sky props are valid\n      />\n      {/* <fog attach=\"fog\" args={['#cc7b32', 0, 34]} /> */}\n      {/* <PointerLockControls maxPolarAngle={Math.PI/2} minPolarAngle={Math.PI/5} args/> */}\n      <ambientLight />\n      <axesHelper args={[100]} />\n      <pointLight position={[-5, 10, 0]} />\n      <Suspense fallback={null}>\n        <Tree position={[2, 0, 0]}/>\n      </Suspense>\n      <Suspense fallback={null}>\n        <JuiceCup/>\n      </Suspense>\n      <Suspense fallback={null}>\n        <Piano/>\n      </Suspense>\n      <Physics>\n        <Plane />\n        <Suspense fallback={null}>\n          <Model />\n        </Suspense>\n      </Physics>\n    </Canvas>\n  )\n}\n\nfunction Cube(props) {\n  const [ref] = useBox(() => ({ mass: 1, position: [0, 5, 0], ...props }))\n  return (\n    <mesh ref={ref}>\n      <boxGeometry />\n    </mesh>\n  )\n}\n\nfunction Plane(props) {\n  // This reference will give us direct access to the mesh\n  const [mesh] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }))\n  // console.log(mesh.current.x)\n  return (\n    <mesh ref={mesh} {...props} rotation={[-Math.PI / 2, 0, 0]}>\n      <planeBufferGeometry args={[100, 100]} />\n      <meshStandardMaterial color=\"orange\" />\n    </mesh>\n  )\n}\n\nexport default Person\n","import './App.css'\nimport Person from './components/Models/Person'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Person />\n    </div>\n  )\n}\n\nexport default App\n","import { getLCP, getFID, getCLS, getFCP, getTTFB } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry)\n    getFID(onPerfEntry)\n    getFCP(onPerfEntry)\n    getLCP(onPerfEntry)\n    getTTFB(onPerfEntry)\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}